[build-system]
requires = ["setuptools>=70.0.0", "wheel"]
build-backend = "setuptools.build_meta"

[project]
name = "oz-union-be-team1"
version = "0.1.0"
description = "OZ Union Backend Team 1"
readme = "README.md"
requires-python = ">=3.13"
dependencies = [
    "aerich>=0.9.1",
    "asyncpg>=0.30.0",
    "bcrypt>=3.2.0,<5.0.0",
    "beautifulsoup4>=4.12.0",
    "fastapi>=0.116.1",
    "fastapi-mail>=1.5.0",
    "feedparser>=6.0.12",
    "httpx>=0.28.1",
    "mypy>=1.18.2",
    "openpyxl>=3.1.5",
    "pandas>=2.3.2",
    "passlib[bcrypt]>=1.7.4,<2.0.0",
    "pre-commit>=4.3.0",
    "psycopg-binary>=3.2.10",
    "pydantic[email]>=2.11.9",
    "pyjwt>=2.10.1",
    "redis>=6.4.0",
    "tomlkit>=0.13.3",
    "tortoise-orm>=0.25.1",
    "uvicorn[standard]>=0.35.0",
]

[project.optional-dependencies]
dev = [
    "pytest>=8.0.0",
    "pytest-asyncio>=0.24.0",
    "httpx>=0.28.1",
    "pytest-cov>=5.0.0",
]

[tool.setuptools.packages.find]
# 자동 패키지 발견 사용
where = ["."]
include = ["api*", "core*", "models*", "repositories*", "schemas*", "services*"]
exclude = ["tests*", "migrations*"]

[tool.aerich]
tortoise_orm = "core.db.TORTOISE_ORM"
location = "./migrations"
src_folder = "."

# MyPy 완전 비활성화 - 개발 초기 단계에서는 타입 체크를 건너뜁니다
# 나중에 점진적으로 타입 어노테이션을 추가한 후 활성화할 예정

# 에러 억제 - 특정 모듈들에 대해 관대한 설정
[[tool.mypy.overrides]]
module = [
    "aerich.*",
    "tortoise.*",
    "redis.*",
    "feedparser.*",
    "openpyxl.*",
    "fastapi_mail.*",
]
ignore_missing_imports = true

# 모델 모듈들에 대해서는 매우 관대하게
[[tool.mypy.overrides]]
module = "models.*"
disallow_untyped_defs = false
disallow_incomplete_defs = false
warn_return_any = false
ignore_errors = true

# API 모듈들에 대해서는 덜 엄격하게
[[tool.mypy.overrides]]
module = "api.*"
disallow_untyped_defs = false
disallow_incomplete_defs = false
warn_return_any = false
ignore_errors = false

# 서비스 모듈들도 관대하게
[[tool.mypy.overrides]]
module = "services.*"
disallow_untyped_defs = false
disallow_incomplete_defs = false
warn_return_any = false

# 코어 모듈도 관대하게
[[tool.mypy.overrides]]
module = "core.*"
disallow_untyped_defs = false
ignore_errors = false

[tool.pydantic-mypy]
init_forbid_extra = true
init_typed = true
warn_required_dynamic_aliases = true
warn_untyped_fields = true

[tool.pytest.ini_options]
minversion = "8.0"
addopts = "-ra -q --strict-markers --strict-config"
testpaths = ["tests"]
python_files = ["test_*.py", "*_test.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]
asyncio_mode = "auto"

[tool.coverage.run]
source = ["api", "core", "models", "repositories", "schemas", "services"]
omit = [
    "*/tests/*",
    "*/migrations/*",
    "*/__pycache__/*",
    ".venv/*",
]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "if self.debug:",
    "if settings.DEBUG",
    "raise AssertionError",
    "raise NotImplementedError",
    "if 0:",
    "if __name__ == .__main__.:",
    "class .*\\bProtocol\\):",
    "@(abc\\.)?abstractmethod",
]