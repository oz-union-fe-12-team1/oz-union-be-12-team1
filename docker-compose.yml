services:
  db:
    image: postgres:16
    env_file:
      - .env
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
    volumes:
      - pgdata:/var/lib/postgresql/data
    ports:
      - "5432:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER} -d ${POSTGRES_DB}"]
      interval: 5s
      timeout: 3s
      retries: 10

  api:
    build:
      context: .
      dockerfile: dockerfile
    env_file:
      - .env
    depends_on:
      db:
        condition: service_healthy
      redis:
        condition: service_started
    environment:
      DATABASE_URL: ${DATABASE_URL}
      PYTHONUNBUFFERED: "1"
    ports:
      - "8000:8000"
    restart: unless-stopped
    volumes:
      - ./quiz.xlsx:/app/quiz.xlsx
#      - ./certs:/app/certs   # ✅ 로컬 SSL 인증서 폴더 연결 (중요!)
    command: >
      uv run uvicorn main:app
      --host 0.0.0.0
      --port 8000
#      --ssl-keyfile /app/certs/localhost.key
#     # --ssl-certfile /app/certs/localhost.crt

  redis:
    image: redis:7
    container_name: redis-1
    ports:
      - "6379:6379"
    volumes:
      - redisdata:/data
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 5s
      timeout: 3s
      retries: 5

  pgadmin:
    image: dpage/pgadmin4
    env_file:
      - .env
    environment:
      PGADMIN_DEFAULT_EMAIL: ${PGADMIN_DEFAULT_EMAIL}
      PGADMIN_DEFAULT_PASSWORD: ${PGADMIN_DEFAULT_PASSWORD}
    ports:
      - "5050:80"
    depends_on:
      - db

volumes:
  pgdata:
  redisdata:
